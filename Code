import numpy as np
import pandas as pd
import csv
import matplotlib.pyplot as plt
import scipy
import sklearn
from matplotlib.pyplot import title, ylabel
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split# to split dataset into train and split
from sklearn.linear_model import LinearRegression
iris_data=pd.read_csv('IRIS.csv')
X,y=load_iris(return_X_y=True)
Model=LinearRegression()
Model.fit(X,y)
Model.predict(X)
from sklearn.neighbors import KNeighborsClassifier
mod1=KNeighborsClassifier()
mod1.fit(X,y)
pred_v=mod1.predict(X)
plt.scatter(pred_v,y)
plt.scatter(pred_v, y)
plt.xlabel("Predicted (KNN)")
plt.ylabel("Actual")
plt.title("KNN Predictions vs Actual")
plt.show()  # <- This line is crucial to display the plot
import seaborn as sns #missing value check
sns.set()
data_frame_per=pd.DataFrame((iris_data.isnull().sum()/len(iris_data))*100)
data_frame_per.plot(kind='bar',title='Missing values in percentage',ylabel='Percentage')
plt.show()
from sklearn.impute import SimpleImputer
print(f'Number of null values: {iris_data.isnull().sum()}')
imp=SimpleImputer(strategy='mean')
iris_data['species']=imp.fit_transform({iris_data['species']})
print(f'Number of null values in age:{iris_data.isnull().sum()}')
def get_parameters(iris_data):
    parameters=[]
    for col in iris_data.columns[iris_data.isnull().any()]:
        if iris_data[col].dtype=='float64'or iris_data[col].dtype=='int64'or iris_data[col].dtype=='int32':
            strategy='mean'
        else:
            strategy='most_frequent'
        missing_values=iris_data[col][iris_data[col].isnull().values[0]]
        parameters[col]={'missing_values':missing_values,'strategy':strategy}
    return parameters
get_parameters(iris_data)
from sklearn.preprocessing import OneHotEncoder
iris_data[['sepal_width','petal_length']]=OneHotEncoder().fit_transform(iris_data['species'])
print(iris_data['sepal_width','petal_length','species'])





